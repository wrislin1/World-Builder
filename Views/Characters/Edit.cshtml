@model WorldBuilder.Models.Character

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Character</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" id="charedit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="WorldID" class="control-label">World</label>
                <select asp-for="WorldID" class="form-control" asp-items="ViewBag.WorldID"></select>
                <span asp-validation-for="WorldID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" required />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="CharacterID" />
            <div class="form-group">
                <label asp-for="LocationID" class="control-label">Location</label>
                @Html.DropDownListFor(m => m.LocationID, (SelectList)ViewBag.LocationID, "None", new { @class = "form-control" })
                <span asp-validation-for="LocationID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Summary" class="control-label"></label>
                <textarea form="charedit" asp-for="Summary" class="form-control"></textarea>
                <span asp-validation-for="Summary" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
@if (ViewBag.location != null)
{
    <p>Error: @ViewBag.location.Name exists in @ViewBag.location.World.Name</p>
}
<div>
    <a asp-action="Index">Back to Characters</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
